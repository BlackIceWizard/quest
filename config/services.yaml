# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    RiverRing\Quest\:
        resource: '../src/'
        exclude:
            - '../src/Bridge/Symfony/Kernel.php'
            - '../src/Domain/Model/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    RiverRing\Quest\Bridge\Symfony\Controller\:
        resource: '../src/Bridge/Symfony/Controller/'
        tags: ['controller.service_arguments']

    RiverRing\Quest\Infrastructure\Database\PdoProvider:
        arguments:
            $host: '%env(resolve:POSTGRES_HOST)%'
            $port: '%env(resolve:POSTGRES_PORT)%'
            $db: '%env(resolve:POSTGRES_DB)%'
            $user: '%env(resolve:POSTGRES_USER)%'
            $pass: '%env(resolve:POSTGRES_PASSWORD)%'

    _instanceof:
        RiverRing\Quest\Infrastructure\Database\Hydration\Hydrant\Hydrant:
            tags: [ 'app.hydrants' ]

    RiverRing\Quest\Infrastructure\Database\Repository\QuestRepository:
        public: true

    RiverRing\Quest\Infrastructure\Database\Hydration\Hydrant\HydrantRegistry:
        arguments:
            $hydrants: !tagged_iterator 'app.hydrants'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
